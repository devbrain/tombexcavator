/** @file rev.c Autogenerated file with the revision and such of OpenDune. */

#include "types.h"
#include "rev.h"

/**
 * The text version of OpenDune's revision.
 * This will be either "<major>.<minor>.<build>[-RC<rc>]",
 * "r<revision number>[M][-<branch>]" or "norev000".
 *
 * The major, minor and build are the numbers that describe releases of
 * OpenDune (like 0.5.3). "-RC" is used to flag release candidates.
 *
 * The revision number is fairly straight forward. The M is to show that
 * the binary is made from modified source code. The branch shows the
 * branch the revision is of and will not be there when it is trunk.
 *
 * norev000 is for non-releases that are made on systems without
 * subversion or sources that are not a checkout of subversion.
 */
const char g_opendune_revision[] = "!!VERSION!!";

/**
 * The text version of OpenDune's build date.
 * Updating the build date in this file is the safest as it generally gets
 * updated for each revision in contrary to most other files that only see
 * updates when they are actually changed themselves.
 */
const char g_opendune_build_date[] = __DATE__ " " __TIME__;

/**
 * Let us know if current build was modified. This detection
 * works even in the case when revision string is overriden by
 * --revision argument.
 * Value 0 means no modification, 1 is for unknown state
 * (compiling from sources without any version control software)
 * and 2 is for modified revision.
 */
const uint8 g_opendune_revision_modified = !!MODIFIED!!;
